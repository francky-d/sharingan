stages:
  - lint
  - test
  - build
  - push

variables:
  GO_VERSION: "1.24"
  API_IMAGE_NAME: "15932/sharingan-api"

.api:
  only:
    refs:
      - main
      - develop

lint_api:
  extends: .api
  stage: lint
  image: golangci/golangci-lint:latest
  script:
    - cd api
    - golangci-lint run ./api/...


test_api:
  extends: .api
  stage: test
  image: golang:${GO_VERSION}
  script:
    - cd api
    - go mod tidy
    - go test -v ./...


build_api:
  extends: .api
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_PASSWORD"
    - source ./api/API_VERSION.txt
  script:

    - docker build -t $API_IMAGE_NAME:latest ./api
    - docker tag $API_IMAGE_NAME:latest $API_IMAGE_NAME:$VERSION
    - docker save -o "$API_IMAGE_NAME-$VERSION.tar" $API_IMAGE_NAME:$VERSION
  artifacts:
    name: "$CI_PROJECT_NAME-$VERSION"
    paths:
      - "$API_IMAGE_NAME-$VERSION.tar"


push_to_registry:
  extends: .api
  stage: push
  image: docker:latest
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$DOCKER_HUB_USERNAME" -p "$DOCKER_HUB_PASSWORD"
    - source ./api/API_VERSION.txt
  script:
    - docker load < "$API_IMAGE_NAME-$VERSION.tar"
    - docker push $API_IMAGE_NAME:latest
    - docker push $API_IMAGE_NAME:$VERSION
