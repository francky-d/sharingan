stages:
  - lint
  - test
  - build
  - push

variables:
  GO_VERSION: "1.24"
  API_IMAGE_NAME: "sharingan-api"
  FULL_API_IMAGE_NAME: "15932/sharingan-api"

.api:
  only:
    refs:
      - main
      - develop

lint_api:
  extends: .api
  stage: lint
  image: golangci/golangci-lint:latest
  script:
    - cd api
    - golangci-lint run ./api/...

test_api:
  extends: .api
  stage: test
  image: golang:${GO_VERSION}
  script:
    - cd api
    - go mod tidy
    - go test -v ./...

build_api:
  extends: .api
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--tls=false"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - export API_VERSION=$(cat ./api/API_VERSION.txt)
    - docker build -t $FULL_API_IMAGE_NAME:latest ./api
    - docker tag $FULL_API_IMAGE_NAME:latest $FULL_API_IMAGE_NAME:$API_VERSION
    - docker images
    - docker save -o "$API_IMAGE_NAME-$API_VERSION.tar" $FULL_API_IMAGE_NAME:$API_VERSION
    - ls -l *.tar | grep $API_IMAGE_NAME
  artifacts:
    name: "$CI_PROJECT_NAME-$API_VERSION"
    paths:
      - "sharingan-api-*.tar"

push_to_registry:
  extends: .api
  stage: push
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--tls=false"]
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - source ./api/API_VERSION.txt
  script:
    - export API_VERSION=$(cat ./api/API_VERSION.txt)
    - docker load < "$API_IMAGE_NAME-$API_VERSION.tar"
    - docker images
    - docker push $API_IMAGE_NAME:latest
    - docker push $API_IMAGE_NAME:$API_VERSION
